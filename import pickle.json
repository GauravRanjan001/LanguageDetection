import pickle
from sklearn.feature_extraction.text import CountVectorizer
from sklearn.naive_bayes import MultinomialNB
from sklearn.model_selection import train_test_split
import pandas as pd
import re
from nltk.corpus import stopwords
from nltk.tokenize import RegexpTokenizer

# Load dataset
df = pd.read_csv("Language Detection.csv")

# Preprocessing
stopwords_set = set(stopwords.words('english'))
regexp = RegexpTokenizer(r'\w+')

def clean(text):
    text = text.lower()
    text = re.sub(r"[$!@#%^&*()_+-={}:,<?>.]", "", text)
    text = regexp.tokenize(text)
    text = [word for word in text if word not in stopwords_set]
    text = " ".join(text)
    return text

df['clean_text'] = df['Text'].apply(clean)

# Features and labels
x = df['clean_text']
y = df['Language']

# Vectorization
vectorizer = CountVectorizer(ngram_range=(1, 3), analyzer='char')
x_vectorized = vectorizer.fit_transform(x)

# Train-test split
x_train, x_test, y_train, y_test = train_test_split(x_vectorized, y, test_size=0.2, random_state=42)

# Train model
model = MultinomialNB()
model.fit(x_train, y_train)

# Save model and vectorizer
with open("model.pkl", "wb") as model_file:
    pickle.dump(model, model_file)

with open("vectorizer.pkl", "wb") as vectorizer_file:
    pickle.dump(vectorizer, vectorizer_file)

print("Model and vectorizer saved as 'model.pkl' and 'vectorizer.pkl'")